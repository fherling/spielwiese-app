server:
  port: 8088
  servlet:
    context-path: /
logging:
  level:
    org:
      springframework:
        security: WARN
        transaction: WARN
    net:
      lbruun: WARN
    org.hibernate.SQL: WARN
    org.hibernate.stat: WARN
    org.hibernate: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    io.micrometer.core.instrument.binder.db: WARN
spring:
  application:
    name: TheApplication
  config:
    import: optional:file:/spring-config/application-optional.yaml
  cache:
    type: simple
    cache-names: [default, cache1]
  security:
    oauth2:
      resourceserver:
        jwt:
          issuerUri: http://keycloak/realms/spielwiese-realm
          jwkSetUri: http://keycloak/realms/spielwiese-realm/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://postgres:5432/db?currentSchema=app
    username: user
    password: pwd
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 1
      idle-timeout: 10000
      pool-name: HikariCP
      connection-timeout: 30000
      max-lifetime: 2000000
      connection-test-query: SELECT 1
      auto-commit: false
      schema: app
  sql:
    init:
#      platform: postgres
      mode: always
  jta:
    enabled: true
  jpa:
    database: postgresql
    show-sql: true
    properties:
      hibernate.default_schema: app
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    open-in-view: false
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: app
  artemis:
    broker-url: tcp://artemis:61616
    user: admin
    password: admin
  threads:
    virtual:
      enabled: true
  codec:
    max-in-memory-size: 50MB
  jackson:
    default-property-inclusion: non_null
management:
  health:
    jms:
      enabled: true
    db:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      group:
        livenessprobe:
          include: ping
        readinessprobe:
          include: db,jms,ping
        startupprobe:
          include: db,jms,ping
    prometheus:
      access: unrestricted
  tracing:
    sampling:
      probability: 1.0
  opentelemetry:
    exporter:
      jaeger:
        endpoint: http://jaeger:4318/v1/traces
    resource-attributes:
      instrumentation.provider: micrometer
      service.name: ${spring.application.name}
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

tracing:
  url: http://jaeger:4318/v1/traces
adapter:
  jms:
    enabled: true